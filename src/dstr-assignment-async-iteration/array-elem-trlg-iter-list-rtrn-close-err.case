// Copyright (C) 2017 the V8 project authors. All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.
/*---
desc: >
    IteratorClose is invoked when evaluation of AssignmentElementList returns
    a "return" completion and the iterator has not been marked as "done"
info: |
    ArrayAssignmentPattern :
        [ AssignmentElementList , Elisionopt AssignmentRestElementopt ]

    [...]
    2. Let iteratorRecord be Record {[[Iterator]]: iterator, [[Done]]: false}.
    3. Let status be the result of performing
       IteratorDestructuringAssignmentEvaluation of AssignmentElementList using
       iteratorRecord as the argument.
    4. If status is an abrupt completion, then
       a. If iteratorRecord.[[Done]] is false, return ? IteratorClose(iterator, status).
       b. Return Completion(status).

    7.4.6 IteratorClose( iterator, completion )

    [...]
    5. Let innerResult be Call(return, iterator, « »).
    6. If completion.[[type]] is throw, return Completion(completion).
    7. If innerResult.[[type]] is throw, return Completion(innerResult).

features: [Symbol.iterator, generators]
template: async-generator
es6id: 12.14.5.2
esid: sec-runtime-semantics-destructuringassignmentevaluation
---*/

//- setup
let returnCount = 0;
let unreachable = 0;
let iterator = {
  return() {
    returnCount += 1;

    throw new Test262Error();
  }
};
let iterable = {
  [Symbol.iterator]() {
    return iterator;
  }
};

//- elems
[ {}[yield] , ]
//- vals
iterable
//- body
unreachable += 1;
//- teardown
iter.return().then(() => $DONE('Promise incorrectly fulfilled.'), ({ constructor }) => {
  assert.sameValue(returnCount, 1);
  assert.sameValue(unreachable, 0, 'Unreachable statement was not executed');
  assert.sameValue(constructor, Test262Error);
}).then($DONE, $DONE);
